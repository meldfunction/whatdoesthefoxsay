apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def releaseVersionName = new Version(major: 1, minor: 0, revision: 4) // make sure to bump this up with each release to jcenter
def releaseVersionCode = 1 // update for new versions of app in play store (prob none for a lib)

def siteUrl = 'https://github.com/thoughtbot/whatdoesthefoxsay'
def gitUrl = 'https://github.com/thoughtbot/whatdoesthefoxsay.git'

group = 'com.thoughtbot'
version = releaseVersionName.toString()

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 23
        versionCode releaseVersionCode
        versionName releaseVersionName.toString()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        userOrg = "thoughtbot"
        repo = "Android-Lib"
        name = "WhatDoesTheFoxSay"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["MIT"]
        publish = true
        version {
            name = releaseVersionName.toString()
            vcsTag = releaseVersionName.toString()
        }
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'WhatDoestheFoxSay'
                description 'A simple library which allows you to create different Animal classes and query for what they say'
                url siteUrl
                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id 'steffkelsey'
                        name 'Steff Kelsey'
                        email 'skelsey@thoughtbot.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'ru.lanwen.verbalregex:java-verbal-expressions:1.4'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:1.7.1'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    include( "**/*.java" )
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

class Version {
    int major, minor, revision

    String toString() {
        "$major.$minor.$revision"
    }
}
